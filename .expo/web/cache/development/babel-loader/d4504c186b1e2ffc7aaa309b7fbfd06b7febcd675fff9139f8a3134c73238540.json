{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport HomeScreen from \"./screens/HomeScreen\";\nimport BookingScreen from \"./screens/BookingScreen\";\nimport PickupDeliveryScreen from \"./screens/PickupDeliveryScreen\";\nimport DistanceScreen from \"./screens/DistanceScreen\";\nimport MapPreviewScreen from \"./screens/MapPreviewScreen\";\nimport SelectTruckScreen from \"./screens/SelectTruckScreen\";\nimport CheckoutScreen from \"./screens/CheckoutScreen\";\nimport ConfirmationScreen from \"./screens/ConfirmationScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nif (typeof document !== 'undefined') {\n  try {\n    require('leaflet/dist/leaflet.css');\n  } catch (e) {}\n}\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Booking\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Booking\",\n        component: BookingScreen\n      }), _jsx(Stack.Screen, {\n        name: \"PickupDelivery\",\n        component: PickupDeliveryScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Distance\",\n        component: DistanceScreen\n      }), _jsx(Stack.Screen, {\n        name: \"MapPreview\",\n        component: MapPreviewScreen\n      }), _jsx(Stack.Screen, {\n        name: \"SelectTruck\",\n        component: SelectTruckScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Checkout\",\n        component: CheckoutScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Confirmation\",\n        component: ConfirmationScreen\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","HomeScreen","BookingScreen","PickupDeliveryScreen","DistanceScreen","MapPreviewScreen","SelectTruckScreen","CheckoutScreen","ConfirmationScreen","jsx","_jsx","jsxs","_jsxs","document","require","e","Stack","App","children","Navigator","initialRouteName","Screen","name","component","options","headerShown"],"sources":["/home/trevor/uz_dining_app/truck_delivery_app/App.js"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport HomeScreen from './screens/HomeScreen';\nimport BookingScreen from './screens/BookingScreen';\nimport PickupDeliveryScreen from './screens/PickupDeliveryScreen';\nimport DistanceScreen from './screens/DistanceScreen';\nimport MapPreviewScreen from './screens/MapPreviewScreen';\nimport SelectTruckScreen from './screens/SelectTruckScreen';\nimport CheckoutScreen from './screens/CheckoutScreen';\nimport ConfirmationScreen from './screens/ConfirmationScreen';\n\n// Load leaflet CSS on web\nif (typeof document !== 'undefined') {\n  try {\n    require('leaflet/dist/leaflet.css');\n  } catch (e) {\n    // ignore when leaflet not installed\n  }\n}\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Booking\">\n        <Stack.Screen name=\"Home\" component={HomeScreen} options={{ headerShown: false }} />\n        <Stack.Screen name=\"Booking\" component={BookingScreen} />\n        <Stack.Screen name=\"PickupDelivery\" component={PickupDeliveryScreen} />\n  <Stack.Screen name=\"Distance\" component={DistanceScreen} />\n  <Stack.Screen name=\"MapPreview\" component={MapPreviewScreen} />\n        <Stack.Screen name=\"SelectTruck\" component={SelectTruckScreen} />\n        <Stack.Screen name=\"Checkout\" component={CheckoutScreen} />\n        <Stack.Screen name=\"Confirmation\" component={ConfirmationScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,UAAU;AACjB,OAAOC,aAAa;AACpB,OAAOC,oBAAoB;AAC3B,OAAOC,cAAc;AACrB,OAAOC,gBAAgB;AACvB,OAAOC,iBAAiB;AACxB,OAAOC,cAAc;AACrB,OAAOC,kBAAkB;AAAqC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAG9D,IAAI,OAAOC,QAAQ,KAAK,WAAW,EAAE;EACnC,IAAI;IACFC,OAAO,CAAC,0BAA0B,CAAC;EACrC,CAAC,CAAC,OAAOC,CAAC,EAAE,CAEZ;AACF;AAEA,IAAMC,KAAK,GAAGhB,0BAA0B,CAAC,CAAC;AAE1C,eAAe,SAASiB,GAAGA,CAAA,EAAG;EAC5B,OACEP,IAAA,CAACX,mBAAmB;IAAAmB,QAAA,EAClBN,KAAA,CAACI,KAAK,CAACG,SAAS;MAACC,gBAAgB,EAAC,SAAS;MAAAF,QAAA,GACzCR,IAAA,CAACM,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAEtB,UAAW;QAACuB,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,CAAE,CAAC,EACpFf,IAAA,CAACM,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,SAAS,EAAErB;MAAc,CAAE,CAAC,EACzDQ,IAAA,CAACM,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,gBAAgB;QAACC,SAAS,EAAEpB;MAAqB,CAAE,CAAC,EAC7EO,IAAA,CAACM,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,SAAS,EAAEnB;MAAe,CAAE,CAAC,EAC3DM,IAAA,CAACM,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,YAAY;QAACC,SAAS,EAAElB;MAAiB,CAAE,CAAC,EACzDK,IAAA,CAACM,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,aAAa;QAACC,SAAS,EAAEjB;MAAkB,CAAE,CAAC,EACjEI,IAAA,CAACM,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,SAAS,EAAEhB;MAAe,CAAE,CAAC,EAC3DG,IAAA,CAACM,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,cAAc;QAACC,SAAS,EAAEf;MAAmB,CAAE,CAAC;IAAA,CACpD;EAAC,CACC,CAAC;AAE1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}